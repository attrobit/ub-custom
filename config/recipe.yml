# image will be published to ghcr.io/<user>/<name>
name: ub-custom
# description will be included in the image's metadata
description: A starting point for further customization of uBlue images. Make your own! https://ublue.it/making-your-own/

# the base image to build on top of (FROM) and the version tag to use
base-image: ghcr.io/ublue-os/silverblue-main
image-version: 39 # latest is also supported if you want new updates ASAP

# module configuration, executed in order
# you can include multiple instances of the same module
modules:
  - type: files
    files:
      - usr: /usr # copy static configurations
                  #
                  # copies config/files/usr into your image's /usr
                  #
                  # configuration you wish to end up in /etc/ on the booted system
                  # should be added into /usr/etc/ as that is the proper "distro"
                  # config directory on ostree. Read more in the files module's README

  - type: rpm-ostree
    repos:
 #     - https://copr.fedorainfracloud.org/coprs/tofik/nwg-shell/repo/fedora-%OS_VERSION%/tofik-nwg-shell-fedora-%OS_VERSION%.repo
      - https://copr.fedorainfracloud.org/coprs/eddsalkield/swaylock-effects/repo/fedora-%OS_VERSION%/eddsalkield-swaylock-effects-fedora-%OS_VERSION%.repo
      - https://copr.fedorainfracloud.org/coprs/kallepm/tuxedo-control-center/repo/fedora-39/kallepm-tuxedo-control-center-fedora-39.repo
      - https://copr.fedorainfracloud.org/coprs/kallepm/tuxedo-drivers/repo/fedora-39/kallepm-tuxedo-drivers-fedora-39.repo
      - https://copr.fedorainfracloud.org/coprs/solopasha/hyprland/repo/fedora-39/solopasha-hyprland-fedora-39.repo
    install:
    # gnome
      - gnome-shell-extension-dash-to-dock
      - gnome-shell-extension-user-theme
    # allgemein
      - libreoffice-calc
#      - tuxedo-drivers
      - kernel-headers
      - tuxedo-control-center
    # Hyprland + Wayland
      - hyprland
      - waybar
      - kitty
      - alacritty
      - wofi
      - rofi
      - dunst
      - xdg-desktop-portal-hyprland
      - polkit-gnome
      - brightnessctl
      - pavucontrol
      - blueman
      - NetworkManager-tui
      - swaybg
      - swayidle
#      - swaylock-effects
      - wlogout
      - wl-clipboard
      - swappy
      - fontawesome-fonts-all
      - libappindicator-gtk3
    # labwc
      - labwc
      - bemenu
    remove:
      - firefox # default firefox removed in favor of flatpak
      - firefox-langpacks # langpacks needs to also be removed to prevent dependency problems
      - hyprland

  - type: bling # configure what to pull in from ublue-os/bling
    install:
      - justfiles # add "!include /usr/share/ublue-os/just/100-bling.just"
                  # in your custom.just (added by default) or local justfile
      - nix-installer # shell shortcuts for determinate system's nix installers
      - ublue-os-wallpapers
      # - ublue-update # https://github.com/ublue-os/ublue-update
      # - 1password # install 1Password (stable) and `op` CLI tool
      # - dconf-update-service # a service unit that updates the dconf db on boot
      # - devpod # https://devpod.sh/ as an rpm
      # - gnome-vrr # enables gnome-vrr for your image
      # - container-tools # installs container-related tools onto /usr/bin: kind, kubectx, docker-compose and kubens
      # - laptop # installs TLP and configures your system for laptop usage
      # - flatpaksync # allows synchronization of user-installed flatpaks, see separate documentation section


  - type: yafti # if included, yafti and it's dependencies (pip & libadwaita)
                #  will be installed and set up
    custom-flatpaks: # this section is optional
      # - Celluloid: io.github.celluloid_player.Celluloid
      # - Krita: org.kde.krita

  - type: default-flatpaks
    system:
      install:
        - com.visualstudio.code
        - org.keepassxc.KeePassXC
        - net.cozic.joplin_desktop
        - com.brave.Browser
        - com.google.Chrome
        - com.mattjakeman.ExtensionManager
        - com.discordapp.Discord

  - type: script
    scripts:
      # this sets up the proper policy & signing files for signed images to work
      - signing.sh
